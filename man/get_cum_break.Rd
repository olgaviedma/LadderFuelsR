% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cummLAD_breaks_metrics.R
\name{get_cum_break}
\alias{get_cum_break}
\title{CBH and the LAD percentage below and above the CBH using the breaking point method}
\usage{
get_cum_break(LAD_profiles, distances_metrics_corr)
}
\arguments{
\item{LAD_profiles}{Original tree Leaf Area Index (LAD) profile (output of [lad.profile()] function in the \emph{leafR} package).
An object of the class data frame.}

\item{distances_metrics_corr}{Tree metrics of fuel layers separated by distances greater than 1 m (output of [get_effective_gap()] function).
An object of the class data frame.}
}
\value{
A data frame identifying the CBH of the vertical tree profile (VTP) based on the breaking point identified by the segmented regression model,
and the percentage of LAD values below and above the identified CBH or breaking point.
}
\description{
This function calculates the canopy base height (CBH) of the vertical tree profile (VTP) using a segmented regression model fitted to
the cumulative LAD values as a function of height.The function also calculates the percentage of LAD values below and above the identified CBH or breaking point.
}
\details{
\itemize{
  \item treeID: tree ID with strings and numeric values
  \item treeID1: tree ID with only numeric values
  \item Hdist: Height of the distance between the ground and the CBH or breaking point (m)
  \item Hcbh: Height of the CBH or breaking point (m)
  \item Hcbh_bp: Height of the CBH or breaking point (m)
  \item effdist: Distance between the ground and the CBH or breaking point (m)
  \item dptf: Depth of the CBH or breaking point (m)
  \item Hdptf: Height of the depth of the CBH or breaking point (m)
  \item below_hcbhbp: Percentage of LAD values below the CBH or breaking point
  \item above_hcbhbp: Percentage of LAD values above the CBH or breaking point
  \item maxlad_Hcbh: Height of the CBH or breaking point with maximum LAD percentage
  \item max_Hcbh: Height of the CBH or breaking point at maximum height distance
  \item last_Hcbh: Height of the CBH or breaking point at the last distance
  \item maxlad_: Values of distance and fuel depth and their corresponding heights for the CBH or breaking point with maximum LAD percentage
  \item max_: Values of distance and fuel depth and their corresponding heights for the CBH or breaking point at maximum height distance
  \item last_: Values of distance and fuel depth and their corresponding heights for the CBH or breaking point at the last distance
  \item cumlad: Cumulative LAD values at the CBH or breaking point
  \item max_height: Maximum height of the tree profile
}
}
\examples{
## Not run:
library(dplyr)
library(magrittr)

# LAD profiles derived from normalized ALS data after applying [lad.profile()] function
data_path <- file.path(system.file("extdata", package = "LadderFuelsR"), "LAD_profiles.txt")
LAD_profiles <- read.table(data_path, sep = "\t", header = TRUE)
LAD_profiles$treeID <- factor(LAD_profiles$treeID)

# Tree metrics derived from get_effective_gap() function
distcorr_path <- file.path(system.file("extdata", package = "LadderFuelsR"), "6_tree_distances_metrics_corr.txt")
distances_metrics_corr <- read.table(distcorr_path, sep = "\t", header = TRUE)
distances_metrics_corr$treeID <- factor(distances_metrics_corr$treeID)

trees_name1 <- as.character(distances_metrics_corr$treeID)
trees_name2 <- factor(unique(trees_name1))

cum_LAD_metrics_list <- list()

for (i in levels(trees_name2)) {
  # Filter data for each tree
  tree1 <- LAD_profiles |> dplyr::filter(treeID == i)
  tree2 <- distances_metrics_corr |> dplyr::filter(treeID == i)

  # Get cumulative LAD metrics for each tree
  cum_LAD_metrics <- get_cum_break(tree1, tree2)
  cum_LAD_metrics_list[[i]] <- cum_LAD_metrics
}

# Combine the individual data frames
cum_LAD_metrics_all <- dplyr::bind_rows(cum_LAD_metrics_list)

# =======================================================================#
# REORDER COLUMNS
# =======================================================================#

# Get original column names
original_column_names <- colnames(cum_LAD_metrics_all)

# Specify prefixes (adjust accordingly)
prefixes <- c("treeID", "Hcbh", "below", "above", "depth", "Hdepth", "dptf", "Hdptf", "Hdist", "effdist", "max", "last", "cumlad")

# Initialize vector to store new order
new_order <- c()

# Loop over prefixes
for (prefix in prefixes) {
  # Find column names matching the current prefix
  matching_columns <- grep(paste0("^", prefix), original_column_names, value = TRUE)

  # Extract numeric suffixes and order the columns based on these suffixes
  numeric_suffixes <- as.numeric(gsub(paste0("^", prefix), "", matching_columns))
  matching_columns <- matching_columns[order(numeric_suffixes)]

  # Append to new order
  new_order <- c(new_order, matching_columns)
}

# Reorder columns
cum_LAD_metrics_order <- cum_LAD_metrics_all[, new_order]
cum_LAD_metrics_path <- file.path(system.file("extdata", package = "LadderFuelsR"), "8_cbh_breaking_point_lad.txt")
write.table(cum_LAD_metrics_order, file = cum_LAD_metrics_path, sep = "\t", row.names = FALSE)
## End(Not run)

}
\author{
Olga Viedma.
}
